@using Yoga.Web.Common
@using Yoga.Entity
@using Yoga.Entity.Enums
@model BankInfo
<form id="form-editbankinfo">
    <input type="hidden" id="BankInfoId" name="BankInfoId" value="@Model.BankInfoId" />
    <input type="hidden" id="TrainerId" name="TrainerId" value="@Model.TrainerId" />

    <div class="row">
        <div class="form-group col-md-6">
            <label for="NumOfDays">Số tài khoản (<span class="required">*</span>)</label>
            @Html.TextBoxFor(x => x.BankNumber, new { @class = "form-control", @placeholder = "Số tài khoản" })
        </div>
        <div class="form-group col-md-6">
            <label for="Price">Tên tài khoản (<span class="required">*</span>)</label>
            @Html.TextBoxFor(x => x.BankName, new { @class = "form-control", @placeholder = "Tên tài khoản" })
        </div>

    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label for="Price">Ngân hàng (<span class="required">*</span>)</label>
            @Html.DropDownListFor(x => x.BankId,CategoryReponsitory.GetBankSelectList(Model.BankId,"--- Chọn ---"), new { @class = "form-control", @placeholder = "Ngân hàng" })
        </div>
        <div class="form-group col-md-6">
            <label for="TotalPaid">Chi nhánh (<span class="required">*</span>)</label>
            @Html.TextBoxFor(x => x.BankBrand, new { @class = "form-control", @placeholder = "Chi nhánh" })
        </div>

    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label for="TotalPaid">Trạng thái (<span class="required">*</span>)</label>
            @Html.DropDownListFor(x => x.StatusId, CategoryReponsitory.GetStatusForProvinces(), new { @class = "form-control", @placeholder = "Tiền Huấn luận viên" })
        </div>
    </div>
    <button type="button" onclick="submitBankInfo();" class="btn btn-primary">Lưu</button>
    <button type="button" data-dismiss="modal" onclick="viewBankInfo(@Model.TrainerId);" class="btn btn-default">Hủy thao tác</button>
</form>

<script>
    $(document).ready(function () {
    });

    function submitBankInfo(orderStatusId) {
        var bankNumber = $('#form-editbankinfo #BankNumber').val();
        var bankName = $('#form-editbankinfo #BankName').val();
        var bankId = $('#form-editbankinfo #BankId').val();
        var bankBrand = $('#form-editbankinfo #BankBrand').val();

        if (isBlank(bankNumber)) {
            swal("Thông báo", "Vui lòng nhập số tài khoản", "warning");
            return;
        }

        if (isBlank(bankName)) {
            swal("Thông báo", "Vui lòng nhập Tên tài khoản", "warning");
            return;
        }

        if (isBlank(bankId)) {
            swal("Thông báo", "Vui lòng nhập Ngân hàng", "warning");
            return;
        }

        if (isBlank(bankBrand)) {
            swal("Thông báo", "Vui lòng nhập Chi nhánh", "warning");
            return;
        }
        $.ajax({
            url: '@Url.Action("SaveBankInfo", "Trainer")',
                data: $('#form-editbankinfo').serialize(),
                type: 'POST',
                success: function (data) {
                    if (data.Result) {
                        hideModalCommon();
                        viewBankInfo(@Model.TrainerId);
                        swal("Thông báo", data.ErrorString, "success");
                    }
                    else
                        swal("Thông báo", data.ErrorString, "error");
                },
                error: function () {
                    swal("Rất tiếc", "Vui lòng kiểm tra Internet!", "error");
                }
            });
        }
</script>
